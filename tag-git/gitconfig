[user]
	name = Eric Bouchut
	email = ebouchut@gmail.com
[color]
	ui = auto
[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	plog = log --graph --date=relative --format=\"%Cgreen%h %C(auto)%d %Creset%s  %C(yellow)(%cd) %C(magenta)<%aN>%Creset\"
	plog-files = plog --name-status
	unstage = reset HEAD --
	s = status
	ctags = !.git/hooks/ctags
#	pf = push --force-with-lease
	wow = log --all --graph --oneline --decorate --simplify-by-decoration
	score = shortlog -sn
	mine  = !git plog --graph --author=\"$(git config user.name)\" --author="ldm-eric.bouchut"
	today = !git plog --graph --since=midnight --author=\"$(git config user.name) <$(git config user.email)>\"
	week  = !git plog --graph --since \"one week ago\" --author=\"$(git config user.name) <$(git config user.email)>\"
	added = diff --name-status --diff-filter=A
	removed = diff --name-status --diff-filter=D
	deleted = diff --name-status --diff-filter=D
	modified = diff --name-status --diff-filter=M
	renamed = diff --name-status --diff-filter=R
	pull = pull --ff-only
	ignored = status --ignored
	lasttag = describe --tags --abbrev=0
	incoming = !git remote update && git plog ..@{u}
	outgoing = !git remote update && git plog @{u}..
	stsh = stash --keep-index  # unstaged
#	stash: unstaged + staged
	staash = stash --include-untracked  # unstaged + staged + untracked
	staaash = stash --all  # unstaged + staged + untracked + ignored
	tags = !git tag -l | sort -V
	aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
	untrack = rm --cache --
	changes = diff --name-status --diff-filter=MADR
	log-deleted = !git log --diff-filter=D --summary | sed -n -e '/^commit/h' -e '\\:/:{' -e G -e 's/\\ncommit \\(.*\\)/ \\1/gp' -e '}'
	log-removed = log-deleted
	restore = !git checkout $(git rev-list -n 1 HEAD -- \"$1\")^ -- \"$1\"
	whereis = "!f() { echo Branches: >&2; git branch --all --contains "$1"; echo Tags: >&2; git tag --contains "$1"; }; f"
	hide = update-index --assume-unchanged
	unhide = update-index --no-assume-unchanged
	hidden = !git ls-files -v | grep \"^[a-z]\" | cut -c3-
	unhide-all = update-index --really-refresh
	ref = name-rev
	plog-watch = !watch -n3 --color   git log --oneline --decorate --graph  --color --all
	releases = "!git fetch ; git branch -a --no-merged master   | grep \"release/\" # List git flow releases not finished yet"
	hotfixes = "!git fetch ; git branch -a --no-merged master   | grep \"hotfix/\" # List git flow hotfixes not finished yet"
[apply]
	whitespace = nowarn
[core]
	autocrlf = input
	safecrlf = true
	excludesfile = ~/.gitignore_global
	pager = less -FRSX
[credential]
	helper = osxkeychain
[push]
	default = simple
[commit]
[init]
	templatedir = ~/.git_template
[gitsh]
	noGreeting = true
[pager]
	log = diff-highlight | less -FRSX
	show = diff-highlight | less -FRSX
	diff = diff-highlight | less -FRSX
[diff]
	tool = bc3
	submodule = log
[difftool]
	prompt = false
[difftool  "deltawalker"]
	cmd = '/Applications/DeltaWalker.app/Contents/Resources/git-diff' "$LOCAL" "$REMOTE"
[merge]
	tool = bc3
[mergetool]
	bc3 = trustExitCode
	prompt = false
[mergetool "bc3"]
	trustExitCode = true
	keepBackup = false
[mergetool  "deltawalker"]
	cmd = '/Applications/DeltaWalker.app/Contents/Resources/git-merge' "$LOCAL" "$REMOTE" "$BASE" "$MERGED"
	keepBackup = false
[mergetool "p4merge"]
	keepBackup = false
[mergetool "splice"]
	cmd = vim -f \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\" -c SpliceInit
	trustExitCode = true
[interactive]
	diffFilter = diff-highlight
[hub]
	protocol = ssh
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
