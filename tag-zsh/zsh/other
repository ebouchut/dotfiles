#=========================================
# Settings for 3rd Party Programs (non zsh)
#=========================================

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SSH
# Ensure ssh-agent is started then load the main key
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if [ -x /usr/local/bin/keychain ]; then
  /usr/local/bin/keychain --quiet $HOME/.ssh/id_rsa
  source $HOME/.keychain/$HOST-sh
fi

#~~~~~~~~~~~~~~~~~~
# oh-my-zsh
# Install my fork of oh-my-zsh and jump on the branch "ebouchut"
#     git clone git@gihub.com:ebouchut/oh-my-zsh.git  &&  git checkout ebouchut
#~~~~~~~~~~~~~~~~~~
# Path to your oh-my-zsh configuration.
export ZSH=$HOME/dev/Perso/oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
export ZSH_THEME="ebouchut"

# Set to this to use case-sensitive completion
# export CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
export DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# export DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
export DISABLE_AUTO_TITLE="false"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
#plugins=(completion gem git github rails ruby ssh-agent)
plugins=(brew brew-cask colorize colored-manpage completion gem git git-flow github rake rails ruby)

source $ZSH/oh-my-zsh.sh

#~~~~~~~~~~~~~~~~~~
# rvm
#~~~~~~~~~~~~~~~~~~
if  which rvm > /dev/null; then
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && export PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function
fi

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# rbenv
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if which rbenv > /dev/null; then
  export PATH="~/.rbenv/bin:~/.rbenv/shims:$PATH"
  eval "$(rbenv init -)"
  # source $(rbenv root)/completions/rbenv.zsh 
fi

#~~~~~~~~~
# Frum: https://github.com/tako8ki/frum
#~~~~~~~~~
if which frum > /dev/null; then
  eval "$(frum init)"
fi

#~~~~~~~~~~~~~
# Open argument in Dash
#   http://zanshin.net/2014/12/26/integrating-dash-into-vim-and-the-command-line/
#~~~~~~~~~~~~~
 function dash() {
   open "dash://$*"
}

#~~~~~~~~~~~~~
# fzf: Fuzzy Finder
#  https://github.com/junegunn/fzf
#~~~~~~~~~~~~~
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#~~~~~~~~~~~~~
# Tmux
#~~~~~~~~~~~~~
_not_inside_tmux() { 
  [[ -z "$TMUX" ]] 
}

ensure_tmux_is_running() {
  if _not_inside_tmux; then
    tat
  fi
}

# To prevent tmux sessions from hanging out when a cron tasks cleans up /tmp
export TMUX_TMPDIR=$HOME/tmp/tmux
[ ! -d $TMUX_TMPDIR ] && mkdir -p $TMUX_TMPDIR

# Automatically connect to a tmux session on startup, 
# even creating the session as needed.
# Disabled as it causes an issue with ssh-agent loading multiple times
#[[ "$-" == *i* ]] && ensure_tmux_is_running

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Hub
# requires hub: http://defunkt.io/hub/
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#git() {hub "$@"} 
#unfunction hub 2>/dev/null  # Workaround for two many levels...


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# zsh-syntax-highlighting
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# travis
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh

#~~~~~~~~~~~~~~~~
# ruby-build
#~~~~~~~~~~~~~~~~
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(ibrew --prefix openssl@1.1)"

#~~~~~~~~~~~~~~~~
# MariaDB
#~~~~~~~~~~~~~~~~
MARIADB_FORMULA=$(ibrew list | grep mariadb | head -1)
if [ ! -z "$MARIADB_FORMULA" ]; then
  export PATH=$PATH:$(ibrew --prefix "${MARIADB_FORMULA}")/bin
fi
#
#~~~~~~~~~~~~~~~~
# Python
#~~~~~~~~~~~~~~~~
export PATH=/usr/local/opt/python@3.9/libexec/bin:$PATH

#~~~~~~~~~~~~~~~~
# Node
#~~~~~~~~~~~~~~~~
export PATH=/usr/local/opt/node@14/bin:$PATH
