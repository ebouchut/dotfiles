# 3rd Party Programs(ie. non shell)  Configuration

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SSH
# Ensure ssh-agent is started then load the main key
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if [ -f /usr/bin/keychain ]; then
  /usr/bin/keychain $HOME/.ssh/id_dsa
  source $HOME/.keychain/$HOST-sh
fi

#~~~~~~~~~
# RVM
#~~~~~~~~
# The goal here is that when RVM is available, we use that, 
# and when it isn't we tell Bundler to install into a shared area 
# inside my home directory. 
# That way I never have to do gem installations with root privileges.
if which rvm > /dev/null; then
  # load RVM into a shell session.
  [[ -s "/usr/local/rvm/scripts/rvm" ]] && . "/usr/local/rvm/scripts/rvm"

  if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
    source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
  else
     # make Bundler do passwordless installs to a sandbox rather than to the system
    export BUNDLE_PATH=~/.bundle
  fi
  export PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
fi


#~~~~~~~~~
# Rbenv
#~~~~~~~~~
if which rbenv 2>&- ; then  # "2>&-" <==> "2>/dev/null"
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
  source ~/.rbenv/completions/rbenv.bash
fi


#~~~~~~~~~~~
# Teamocil
#~~~~~~~~~~~
if which teamocil 2>&- ; then
  complete -W "$(teamocil --list)" teamocil 
fi


#~~~~~~~~~~~~~
# xsh (xiki)
#~~~~~~~~~~~~~
if [ -f ~/.xsh ]; then
  source ~/.xsh
fi
