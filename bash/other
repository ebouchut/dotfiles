# 3rd Party Programs(ie. non shell)  Configuration

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SSH
# Ensure ssh-agent is started then load the main key
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
  echo "Initializing new SSH agent..."
  /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  echo succeeded
  chmod 600 "${SSH_ENV}"
  source "${SSH_ENV}" > /dev/null
  /usr/bin/ssh-add
}

if [ -f /usr/local/bin/keychain ]; then
  /usr/local/bin/keychain $HOME/.ssh/id_dsa
  source $HOME/.keychain/$HOST-sh
elif [ -f "${SSH_ENV}" ]; then  # Source: http://mah.everybody.org/docs/ssh
  source "${SSH_ENV}" > /dev/null
  ps -fp ${SSH_AGENT_PID} | grep 'ssh-agent$' > /dev/null || { start_agent; }
else
  start_agent;
fi

#~~~~~~~~~
# RVM
#~~~~~~~~
# The goal here is that when RVM is available, we use that, 
# and when it isn't we tell Bundler to install into a shared area 
# inside my home directory. 
# That way I never have to do gem installations with root privileges.
if which rvm > /dev/null; then
  # load RVM into a shell session.
  [[ -s "/usr/local/rvm/scripts/rvm" ]] && . "/usr/local/rvm/scripts/rvm"

  if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
    source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
  else
     # make Bundler do passwordless installs to a sandbox rather than to the system
    export BUNDLE_PATH=~/.bundle
  fi
  export PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
fi


#~~~~~~~~~
# Rbenv
#~~~~~~~~~
if which rbenv 2>&- ; then  # "2>&-" <==> "2>/dev/null"
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
  source ~/.rbenv/completions/rbenv.bash
fi


#~~~~~~~~~~~
# Teamocil
#~~~~~~~~~~~
if which teamocil 2>&- ; then
  complete -W "$(teamocil --list)" teamocil 
fi


#~~~~~~~~~~~~~
# xsh (xiki)
#~~~~~~~~~~~~~
if [ -f ~/.xsh ]; then
  source ~/.xsh
fi
#
#~~~~~~~~~~~~~
# Open argument in Dash: 
#   http://zanshin.net/2014/12/26/integrating-dash-into-vim-and-the-command-line/
#~~~~~~~~~~~~~
 function dash() {
   open "dash://$*"
 }

p

#~~~~~~~~~~~~~~~~~~~~
# fzf (Fuzzy Finder)
#   https://github.com/junegunn/fzf
#~~~~~~~~~~~~~~~~~~~~
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

#~~~~~~~~~~~~~
# Tmux
#~~~~~~~~~~~~~
_not_inside_tmux() { [[ -z "$TMUX" ]] }

ensure_tmux_is_running() {
  if _not_inside_tmux; then
    tat
  fi
}

# Automatically connect to a tmux session on startup, 
# even creating the session as needed.
ensure_tmux_is_running

#~~~~~~~~~~~~~
# git
#~~~~~~~~~~~~~
# g as a shortcut for git
# No arguments: `git status`
# With arguments: acts like `git`
#g() {
#  if [[ $# > 0 ]]; then
#    git $@
#  else
#    git status
#  fi
#}

# Complete g like git
compdef g=git
